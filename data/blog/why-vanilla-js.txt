## 寫在前面：為什麼是 Vanilla JS？

在 2025 年的今天，當 React, Vue, Svelte 等前端框架已成為主流，選擇「手刻原生 JavaScript」（也就是俗稱的 Vanilla JS）來打造一個功能完整的個人網站，聽起來像是一種復古甚至自虐的行為。然而，對我來說，這是一個經過深思熟慮的決定，背後有多重考量。

我的核心理念：掌握本質
身為一個熱愛「從零到一」的創造者，我始終相信，理解工具底層的運作原理，遠比單純學會如何使用工具更重要。框架是強大的武器，它們封裝了複雜的 DOM 操作、狀態管理，讓我們能快速開發。但這種便利性也可能成為一種詛咒——我們很容易滿足於呼叫 API，卻忘了背後發生了什麼。

這次的個人網站專案，對我而言不僅是一個作品集，更是一次「回歸基礎」的修煉。

選擇 Vanilla JS 的三大理由
極致的輕量與效能：
這個網站沒有複雜的狀態管理，也不需要虛擬 DOM 的 diff 演算法。引入任何框架，都會帶來數十 KB 甚至更多的額外負擔。使用原生 JS，意味著訪客的瀏覽器只需要下載我親手寫的程式碼，每一行都是必要的。這帶來的是最快的載入速度和最直接的效能體驗。

完全的掌控力：
不受任何框架的規則束縛，我可以 100% 掌控頁面上的每一個元素、每一次互動的細節。從頁面切換的淡入淡出、技能條的載入動畫，到作品集圖集的輪播邏輯，所有的一切都由我自己設計和實現。這種完全的掌控感，讓我能確保網站的每一個細節都符合我想要的風格與體驗。

鞏固核心技能：
拋開框架的語法糖，我必須直接面對 document.getElementById、addEventListener、IntersectionObserver 等 Web API。這個過程強迫我重新審視和鞏固最核心的 JavaScript 與瀏覽器知識，這對任何開發者的長期成長都是至關重要的。

### 結論
選擇 Vanilla JS 並不代表我反對框架。在大型、複雜的協作專案中，框架的價值無可取代。但對於個人網站這樣一個能完全由自己掌控的專案，回歸原生，不僅帶來了效能上的優勢，更是一次寶貴的學習與沉澱。

如果你也是一位熱愛創造的開發者，不妨也試試看，為自己打造一個純粹的 Vanilla JS 作品吧！